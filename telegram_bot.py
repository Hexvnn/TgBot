import os
import time

from dotenv import load_dotenv
from telegram import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardMarkup,
    Update,
)
from telegram.ext import (
    CallbackContext,
    CallbackQueryHandler,
    CommandHandler,
    Filters,
    MessageHandler,
    Updater,
)

load_dotenv()
secret_token = os.getenv("TOKEN")


def send_welcome_message(update: Update, context: CallbackContext):
    context.bot.send_photo(
        chat_id=update.effective_chat.id, photo=open("logo/logo.jpg", "rb")
    )
    username = update.message.from_user.first_name
    welcome_message = f"–ü—Ä–∏–≤–µ—Ç, {username}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω! üéâ\n–¢—ã –ø–æ–ø–∞–ª –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–æ —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –Ω–∞ —Ç–æ–≤–∞—Ä –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏ üòâ"
    keyboard = [
        [
            InlineKeyboardButton(
                "üöÄ –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª", url="https://t.me/seller_username"
            ),
            InlineKeyboardButton(
                "üì© –û—Ç–∑—ã–≤—ã –æ –Ω–∞—Å",
                url="https://t.me/reviews_channel",
            ),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(welcome_message, reply_markup=reply_markup)
    send_main_menu(update, context)


def send_main_menu(update, context, reply_markup=None):
    custom_keyboard = [["üí∏ –ó–∞–∫–∞–∑/–¶–µ–Ω–∞", "üéÅ –ê–∫—Ü–∏—è", "üíé –ò–Ω—Ñ–æ"]]
    reply_markup = (
        reply_markup
        if reply_markup is not None
        else ReplyKeyboardMarkup(custom_keyboard, resize_keyboard=True)
    )
    update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)


def send_promotion_message(update, context):
    promotion_text = """
    –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è !

    –° 07.11 –ø–æ 09.11 –£ –Ω–∞—Å —Å–∫–∏–¥–∫–∏ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –¥–æ –ú–æ—Å–∫–≤—ã
    –î–æ—Å—Ç–∞–≤–∫–∞ —Ñ—É—Ç–±–æ–ª–æ–∫/—Ö—É–¥–∏ - 250—Ä
    –î–æ—Å—Ç–∞–≤–∫–∞ –æ–±—É–≤–∏ - 700—Ä
    –î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—Ç–æ–∫/–≤–µ—Ä—Ö–Ω–µ–π –æ–¥–µ–∂–¥—ã - 500—Ä

    –ò —É –∫–∞–∂–¥–æ–≥–æ –∏–∑ –≤–∞—Å –±—É–¥–µ—Ç —à–∞–Ω—Å –æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≠–∫—Å–ø—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫—É –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ üòò

    –ü–æ—Å—ã–ª–∫–∞ —ç–∫—Å–ø—Ä–µ—Å—Å –¥–æ–µ–¥–µ—Ç –¥–æ –ú–æ—Å–∫–≤—ã –±—É–∫–≤–∞–ª—å–Ω–æ –∑–∞ 3-5 –¥–Ω–µ–π, —Å –º–æ–º–µ–Ω—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞

    –ñ–¥–µ–º 10-11 —á–∏—Å–ª–∞, –±—É–¥–µ—Ç —Å–∞–º—ã–π –∂–∏—Ä
    """
    context.bot.send_photo(
        chat_id=update.effective_chat.id, photo=open("action/–ê–∫—Ü–∏—è.jpg", "rb")
    )
    reply_markup = ReplyKeyboardMarkup([["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]], resize_keyboard=True)
    update.message.reply_text(promotion_text, reply_markup=reply_markup)


def send_info_message(update, context):
    info_text = """
    –ù–∞—à–∏ —É—Å–ª–æ–≤–∏—è –¥–ª—è –∑–∞–∫–∞–∑–∞:

    –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ 1 –ø–∞—Ä—ã –∫—Ä–æ—Å—Å–æ–≤–æ–∫ - –ø—Ä–∏–º–µ—Ä–Ω–æ 1600 –† —Å —É—á–µ—Ç–æ–º –°–î–ï–ö–ê
    –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–¥–µ–∂–¥—ã - –ø—Ä–∏–º–µ—Ä–Ω–æ 700 –† —Å —É—á–µ—Ç–æ–º –°–î–ï–ö–ê
    (–§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –±—É–¥–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω–∞, –∫–æ–≥–¥–∞ —Ç–æ–≤–∞—Ä –±—É–¥–µ—Ç –≤–∑–≤–µ—à–µ–Ω –Ω–∞ –Ω–∞—à–µ–º —Å–∫–ª–∞–¥–µ)
    –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –ø–æ–¥–æ—à–µ–ª - –º—ã –º–æ–∂–µ–º –ø–æ–º–æ—á—å –≤–∞–º –ø—Ä–æ–¥–∞—Ç—å –µ–≥–æ, –ª–∏–±–æ –∑–∞–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π, –Ω–æ —Å —Ö–æ—Ä–æ—à–µ–π —Å–∫–∏–¥–∫–æ–π.

    –†–∞—Å—Ü–µ–Ω–∫–∏ –Ω–∞ –∑–∞–∫–∞–∑:
    –û—Ç 100 –¥–æ 500 ¬• - 800 —Ä—É–±–ª–µ–π
    –û—Ç 501 –¥–æ 1000 ¬• - 9% –æ—Ç —Å—É–º–º—ã —Ç–æ–≤–∞—Ä–∞
    –û—Ç 1001-2000 ¬•- 8% –æ—Ç —Å—É–º–º—ã —Ç–æ–≤–∞—Ä–∞
    –û—Ç 2001 ¬• - 7% –æ—Ç —Å—É–º–º—ã —Ç–æ–≤–∞—Ä–∞

    –ü—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ.

    –ó–∞–∫–∞–∑ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞, —Å –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–∫—É–ø–∫–∏, –æ—Ç –≤–∞—Å –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –§–ò–û, –ì–æ—Ä–æ–¥, –ê–¥—Ä–µ—Å –°–î–≠–ö–ê –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞

    –ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏—Ö –∑–¥–µ—Å—å ‚Üí @dabiks
    """
    reply_markup = ReplyKeyboardMarkup([["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]], resize_keyboard=True)
    update.message.reply_text(info_text, reply_markup=reply_markup)


def send_order_price_menu(update, context):
    reply_markup = ReplyKeyboardMarkup(
        [["üì† –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—É", "üõç –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]],
        resize_keyboard=True,
    )
    update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
        reply_markup=reply_markup,
    )


def handle_price_request(update, context):
    update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∂–µ–ª–∞–µ–º–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ (–≤ ¬• –Æ–∞–Ω—è—Ö)")
    context.user_data["expecting_price_input"] = True


def handle_price_response(update, context):
    user_input = update.message.text
    if user_input.replace(".", "", 1).isdigit():
        amount_in_yuan = float(user_input)
        exchange_rate = 12.3
        amount_in_rubles = int(amount_in_yuan * exchange_rate)
        response_text = f"–ò—Ç–æ–≥–æ {amount_in_rubles} —Ä—É–±–ª–µ–π"
        reply_markup = ReplyKeyboardMarkup(
            [["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]],
            resize_keyboard=True,
        )
        update.message.reply_text(response_text, reply_markup=reply_markup)
        inline_keyboard = [
            [InlineKeyboardButton("üì¶ –ó–∞–∫–∞–∑–∞—Ç—å", url="https://t.me/seller_username")]
        ]
        inline_markup = InlineKeyboardMarkup(inline_keyboard)
        context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="–ó–∞–∫–∞–∂–∏ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä —É –Ω–∞—Å",
            reply_markup=inline_markup,
        )


def handle_order_request(update, context):
    message = "‚ö†Ô∏è –ù—É–∂–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
    keyboard = [
        [
            InlineKeyboardButton("–î–∞", callback_data="yes_instruction"),
            InlineKeyboardButton("–ù–µ—Ç", callback_data="no_instruction"),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(message, reply_markup=reply_markup)


def handle_instruction_response(update, context):
    message = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    "üöõ –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É", url="http://t.me/username_seller"
                )
            ]
        ]
    )

    query = update.callback_query
    context.bot.edit_message_reply_markup(
        chat_id=query.message.chat_id, message_id=query.message.message_id
    )
    if query.data == "yes_instruction":
        send_instruction_steps(query.message.chat_id, context)
    else:
        query.message.reply_text(
            "‚úÖ –í—ã —Ä–∞–∑–±–µ—Ä–µ—Ç–µ—Å—å –±–µ–∑ –Ω–∞—à–µ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–≤—Ü—É",
            reply_markup=message,
        )


def send_instruction_steps(chat_id, context):
    messages = [
        "1/7 –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ—Å—á–∏—Ç–∞–ª —Ü–µ–Ω—É, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —É–∫–∞–∑–∞–Ω–Ω—É—é –Ω–∏–∂–µ",
        "2/7 –î–∞–ª–µ–µ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º —Ä–∞–∑–º–µ—Ä (1.) –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ(2.). –ï—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑–º–µ—Ä–Ω–∞—è —Å–µ—Ç–∫–∞, —Ç–æ –æ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤—ã—à–µ (3.)",
        "3/7 –ù–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ü–µ–Ω–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É, —á—Ç–æ–±—ã –æ–Ω –ø–æ—Å—á–∏—Ç–∞–ª —Ü–µ–Ω—É —Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏.",
        "4/7 –í–Ω–∏–º–∞–Ω–∏–µ! –ò–Ω–æ–≥–¥–∞ —Ü–µ–Ω–∞ —Å–≤–µ—Ä—Ö—É, –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ, —á–µ–º —Å–Ω–∏–∑—É, —Ç–æ–≥–¥–∞ –º—ã —Å—á–∏—Ç–∞–µ–º –ø–æ —Ç–æ–π, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–≤–µ—Ä—Ö—É, —Å–≤—è–∑–∞–Ω–æ —ç—Ç–æ —Å —Ç–µ–º, —á—Ç–æ —É –≤–∞—Å –∏–º–µ—é—Ç—Å—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã, –Ω–æ —É –Ω–∞—Å –∏—Ö –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É –≤—ã–∫—É–ø–∞–µ–º –±–µ–∑ –∏—Ö —É—á–µ—Ç–∞.",
        "5/7 –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º! –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏–º–µ—é—Ç—Å—è —Ç–æ–≤–∞—Ä—ã, –ø–µ—Ä–µ–¥ —Ü–µ–Ω–æ–π —É –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç–æ–∏—Ç –≤–æ–ª–Ω–∏—Å—Ç–∞—è —á–µ—Ä—Ç–∞, –∏–ª–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ —É –≤–∞—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç–æ–∏—Ç –≤–æ–ª–Ω–∏—Å—Ç–∞—è —á–µ—Ä—Ç–∞, —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç–æ–≤–∞—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–µ –≤ –ö–∏—Ç–∞–µ. –¢–∞–∫–æ–π —Ç–æ–≤–∞—Ä –º—ã –¥–æ—Å—Ç–∞–≤–∏–º, –Ω–æ —Å—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∞—Ç—Å—è, –ø—Ä–∏–º–µ—Ä–Ω—ã–π —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ –∫–Ω–æ–ø–∫–µ (–î–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ). –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ–Ω —Ç–∞–∫ –∂–µ, –∫–∞–∫ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –≤—ã—à–µ.",
        "6/7 –ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä, —Ç–æ –æ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É. (–ò–Ω–æ–≥–¥–∞ –æ–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–∏–¥ –∑–µ–ª—ë–Ω–æ–≥–æ –∑–Ω–∞—á–∫–∞ –í–∏–ß–∞—Ç–∞).",
        "7/7 –ö–æ–≥–¥–∞ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –¥–∞–ª–µ–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä –±—É–¥–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ –Ω–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. ",
    ]

    seller = InlineKeyboardMarkup(
        [
            [
                InlineKeyboardButton(
                    "üöõ –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É", url="http://t.me/username_seller"
                )
            ]
        ]
    )

    for i, message in enumerate(messages, start=1):
        photo_path = f"images/{i}.jpg"
        with open(photo_path, "rb") as photo:
            context.bot.send_photo(chat_id=chat_id, photo=photo)
        if i == len(messages):
            context.bot.send_message(
                chat_id=chat_id,
                text=message,
                reply_markup=seller,
            )
        else:
            context.bot.send_message(chat_id=chat_id, text=message)
        time.sleep(3)


def handle_message(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "/start":
        send_welcome_message(update, context)
    elif text == "üíé –ò–Ω—Ñ–æ":
        send_info_message(update, context)
    elif text == "üéÅ –ê–∫—Ü–∏—è":
        send_promotion_message(update, context)
    elif text == "üí∏ –ó–∞–∫–∞–∑/–¶–µ–Ω–∞":
        send_order_price_menu(update, context)
    elif text == "üì† –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—É":
        handle_price_request(update, context)
    elif text == "üõç –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑":
        handle_order_request(update, context)
    elif text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
        send_main_menu(update, context)
    else:
        if context.user_data.get("expecting_price_input", False):
            handle_price_response(update, context)
            context.user_data["expecting_price_input"] = False


def main():
    updater = Updater(secret_token, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", send_welcome_message))
    dp.add_handler(
        MessageHandler(
            Filters.text & ~Filters.command,
            handle_message,
        )
    )
    dp.add_handler(
        CallbackQueryHandler(
            handle_instruction_response,
            pattern="yes_instruction",
        )
    )
    dp.add_handler(
        CallbackQueryHandler(
            handle_instruction_response,
            pattern="no_instruction",
        )
    )
    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()
